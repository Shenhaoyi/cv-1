{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","n","string2","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";AAAA,IAAIA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,UAC/BE,EAAJ,w/BAiDIC,GAAK,EACLC,EAAU,GAQVC,EAAO,SAAPA,IACFC,WAAW,WAES,OAAdJ,EADJC,GAAK,GAIHC,GAAW,OACY,MAAdF,EAAOC,GAChBC,GAAW,SAEXA,GAAWF,EAAOC,GAIpBL,EAAKS,UAAYH,EACjBH,EAAMM,UAAYL,EAAOM,UAAU,EAAGL,GAEtCM,OAAOC,SAAS,EAAG,OACnBZ,EAAKY,SAAS,EAAG,OACbP,EAAID,EAAOS,OAAS,GACtBN,KAED,KAELA","file":"main.f04d92ab.js","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector(\"#html\"); //通过css选择器找到这个元素\r\nlet style = document.querySelector(\"#style\");\r\nlet string = `/* 你好，我叫小黑\r\n * 接下来的演示一下我的前端功底\r\n * 首先我要准备一个div\r\n */\r\n#div1{\r\n    width:200px;\r\n    height:200px;\r\n}\r\n/* 接下来我把div编程八卦图\r\n * 注意看好了\r\n * 首先，把div变成一个圆\r\n */\r\n#div1{\r\n    border-radius:50%;\r\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\r\n    border:none;\r\n}\r\n/* 八卦是阴阳形成的\r\n * 一黑一白\r\n */\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 加两个神秘的小球 */\r\n#div1::before{\r\n    width:100px;\r\n    height:100px;\r\n    top:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#000;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width:100px;\r\n    height:100px;\r\n    bottom:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#fff;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n`;\r\n// 注意string[0] = '';需要进行替换\r\n// 但是 console.log(string) 则能显示回车？\r\n// string = string.replace(\"\\n\", \"<br>\"); //只能替换掉第一个 方法1\r\n// string = string.replace(/\\n/g, \"<br>\"); //正则表达式  但是显示的时候会显示<，还是不行 方法2\r\nlet n = -1;\r\nlet string2 = \"\";\r\n\r\n//每各一段就执行\r\n// setInterval(() => {\r\n//   n += 1;\r\n//   html.innerHTML = n;\r\n// }, 1000);\r\n\r\nlet step = () => {\r\n  setTimeout(() => {\r\n    n += 1;\r\n    if (string[n] === \"\\n\") {\r\n      //遇到回车符，替换成br元素\r\n      //方法3\r\n      string2 += \"<br>\";\r\n    } else if (string[n] === \" \") {\r\n      string2 += \"&nbsp;\";\r\n    } else {\r\n      string2 += string[n]; //照搬\r\n    }\r\n    //简化\r\n    // string2 += string[n] === \"\\n\" ? \"<br>\" : string[n];\r\n    html.innerHTML = string2;\r\n    style.innerHTML = string.substring(0, n); //css代码外的内容需要注释\r\n    // html.innerHTML = string.substring(0, n);\r\n    window.scrollTo(0, 99999); //自动滚动到底部\r\n    html.scrollTo(0, 99999); //手机端是将html的div进行滚动\r\n    if (n < string.length - 1) {\r\n      step();\r\n    }\r\n  }, 50);\r\n};\r\nstep();\r\n\r\n// setTimeout(() => {\r\n//   style.innerHTML = `\r\n//     body{\r\n//         color:red;\r\n//     }\r\n//     `;\r\n// }, 2000);\r\n"]}